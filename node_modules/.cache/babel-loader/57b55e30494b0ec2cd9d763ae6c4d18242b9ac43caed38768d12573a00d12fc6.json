{"ast":null,"code":"var _jsxFileName = \"/workspaces/saikiran-test/src/Todo.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    var arr = [];\n    for (var i = 0; i < 4; i++) {\n      var element = {\n        id: i,\n        name: `Hello${i}`,\n        isComplete: false\n      };\n      arr.push(element);\n    }\n    setTasks(arr);\n  }, []);\n  const Complete = id => {\n    console.log(tasks[id]);\n    var arr = tasks;\n    arr[id].isComplete = true;\n    setTasks(arr);\n  };\n  const Delete = id => {\n    console.log(tasks[id]);\n    var arr = tasks;\n    arr.splice(id, 1);\n    setTasks(arr);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks === null || tasks === void 0 ? void 0 : tasks.map(t => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: t.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: t.isComplete ? t.name.strike() : t.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), !t.isComplete ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"complete-btn\",\n          onClick: () => Complete(t.id),\n          children: \"complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this) : '', /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btn\",\n          onClick: () => Delete(t.id),\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useEffect","useState","React","jsxDEV","_jsxDEV","Todo","_s","tasks","setTasks","arr","i","element","id","name","isComplete","push","Complete","console","log","Delete","splice","children","map","t","fileName","_jsxFileName","lineNumber","columnNumber","strike","className","onClick","_c","$RefreshReg$"],"sources":["/workspaces/saikiran-test/src/Todo.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport React from 'react';\r\n\r\nconst Todo = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    var arr = [];\r\n    for (var i = 0; i < 4; i++) {\r\n      var element = {\r\n        id: i,\r\n        name: `Hello${i}`,\r\n        isComplete: false\r\n      };\r\n      arr.push(element);\r\n    }\r\n    setTasks(arr);\r\n  }, []);\r\n\r\n  const Complete = id => {\r\n    console.log(tasks[id]);\r\n    var arr = tasks;\r\n    arr[id].isComplete = true;\r\n    setTasks(arr);\r\n  };\r\n\r\n  const Delete = id => {\r\n    console.log(tasks[id]);\r\n    var arr = tasks;\r\n    arr.splice(id, 1);\r\n    setTasks(arr);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {tasks?.map(t => {\r\n        return (\r\n          <div>\r\n            <p>{t.id}</p>\r\n            <p>{t.isComplete ? t.name.strike() : t.name}</p>\r\n\r\n            {!t.isComplete ? (\r\n              <button className=\"complete-btn\" onClick={() => Complete(t.id)}>\r\n                complete\r\n              </button>\r\n            ) : (\r\n              ''\r\n            )}\r\n            <button className=\"delete-btn\" onClick={() => Delete(t.id)}>\r\n              delete\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Todo;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,IAAIS,GAAG,GAAG,EAAE;IACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,IAAIC,OAAO,GAAG;QACZC,EAAE,EAAEF,CAAC;QACLG,IAAI,EAAE,QAAQH,CAAC,EAAE;QACjBI,UAAU,EAAE;MACd,CAAC;MACDL,GAAG,CAACM,IAAI,CAACJ,OAAO,CAAC;IACnB;IACAH,QAAQ,CAACC,GAAG,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,QAAQ,GAAGJ,EAAE,IAAI;IACrBK,OAAO,CAACC,GAAG,CAACX,KAAK,CAACK,EAAE,CAAC,CAAC;IACtB,IAAIH,GAAG,GAAGF,KAAK;IACfE,GAAG,CAACG,EAAE,CAAC,CAACE,UAAU,GAAG,IAAI;IACzBN,QAAQ,CAACC,GAAG,CAAC;EACf,CAAC;EAED,MAAMU,MAAM,GAAGP,EAAE,IAAI;IACnBK,OAAO,CAACC,GAAG,CAACX,KAAK,CAACK,EAAE,CAAC,CAAC;IACtB,IAAIH,GAAG,GAAGF,KAAK;IACfE,GAAG,CAACW,MAAM,CAACR,EAAE,EAAE,CAAC,CAAC;IACjBJ,QAAQ,CAACC,GAAG,CAAC;EACf,CAAC;EAED,oBACEL,OAAA;IAAAiB,QAAA,EACGd,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEe,GAAG,CAACC,CAAC,IAAI;MACf,oBACEnB,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UAAAiB,QAAA,EAAIE,CAAC,CAACX;QAAE;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACbvB,OAAA;UAAAiB,QAAA,EAAIE,CAAC,CAACT,UAAU,GAAGS,CAAC,CAACV,IAAI,CAACe,MAAM,CAAC,CAAC,GAAGL,CAAC,CAACV;QAAI;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAE/C,CAACJ,CAAC,CAACT,UAAU,gBACZV,OAAA;UAAQyB,SAAS,EAAC,cAAc;UAACC,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAACO,CAAC,CAACX,EAAE,CAAE;UAAAS,QAAA,EAAC;QAEhE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,GAET,EACD,eACDvB,OAAA;UAAQyB,SAAS,EAAC,YAAY;UAACC,OAAO,EAAEA,CAAA,KAAMX,MAAM,CAACI,CAAC,CAACX,EAAE,CAAE;UAAAS,QAAA,EAAC;QAE5D;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CArDID,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAsDV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}